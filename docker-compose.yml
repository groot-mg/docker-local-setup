version: '3.8'

services:
  # Applications
  keycloak:
    extends:
      file: identity-service/docker-compose.yml
      service: keycloak

  service-discovery:
    container_name: service-discovery
    build: service-discovery/service-discovery-app
    restart: always
    ports:
      - "8081:8081"
    healthcheck:
      test: "curl --fail --silent http://localhost:8081/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  gateway:
    container_name: gateway
    build: gateway/gateway-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_URL=http://service-discovery:8081
      - KEYCLOAK_URL=http://keycloak:8080
    healthcheck:
      test: "curl --fail --silent http://localhost:8080/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  sales-catalog:
    container_name: sales-catalog
    build: sales-catalog/sales-catalog-app
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8081/eureka/
    healthcheck:
      test: "curl --fail --silent http://localhost:8082/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  basket-service:
    container_name: basket-service
    build: basket-service/basket-service-app
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8081/eureka/
    healthcheck:
      test: "curl --fail --silent http://localhost:8083/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  # Kafka
  kafka:
    extends:
      file: local-kafka-config/docker-compose.yml
      service: kafka

  zookeeper:
    extends:
      file: local-kafka-config/docker-compose.yml
      service: zookeeper
  
  kafdrop:
    extends:
      file: local-kafka-config/docker-compose.yml
      service: kafdrop

  # PostgreSQL
  database:
    extends:
      file: local-database-config/docker-compose.yml
      service: database

  pgadmin:
    extends:
      file: local-database-config/docker-compose.yml
      service: pgadmin

  postgres-exporter:
    extends:
      file: local-database-config/docker-compose.yml
      service: postgres-exporter

  # Observability
  prometheus:
    extends:
      file: observability-tools/docker-compose.yml
      service: prometheus

  alert-manager:
    extends:
      file: observability-tools/docker-compose.yml
      service: alertmanager

  grafana:
    extends:
      file: observability-tools/docker-compose.yml
      service: grafana