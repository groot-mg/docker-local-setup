version: '3.8'

services:
  keycloak:
    extends:
      file: identity-service/docker-compose.yml
      service: keycloak

 # Observability

  prometheus:
    container_name: prometheus
    build:
      context: observability-tools/prometheus
      args:
        ENVIRONMENT: local
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml

# Alert manager is set up to send alert to slack, change the slack channel on alertmanager/config/alertmanager-local.yml and change 'api_url' to enable this
  alertmanager:
    container_name: alertmanager
    build:
      context: observability-tools/alertmanager
      args:
        ENVIRONMENT: local
    restart: unless-stopped
    ports:
      - "9093:9093"
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml

  # default user and password: admin
  grafana:
    container_name: grafana
    build: observability-tools/grafana
    restart: unless-stopped
    depends_on:
#      - loki
      - prometheus
#      - tempo
    ports:
      - "3000:3000"
    volumes:
      - ./observability-tools/grafana/provisioning/:/etc/grafana/provisioning/

#  tempo:
#    image: grafana/tempo:1.2.0
#    container_name: tempo
#    command: -config.file /etc/tempo-config.yml
#    volumes:
#      - ./observability-tools/tempo/tempo.yml:/etc/tempo-config.yml
#    ports:
#      - "3101:3100"     # Tempo
#      - "9411:9411"     # Zipkin

#  loki:
#    image: grafana/loki:2.4.0
#    container_name: loki
#    depends_on:
#      - fluent-bit
#    ports:
#      - "3100:3100"

#  fluent-bit:
#    image: grafana/fluent-bit-plugin-loki:2.4.0-amd64
#    container_name: fluent-bit
#    ports:
#      - "24224:24224"
#    environment:
#      - LOKI_URL=http://loki:3100/loki/api/v1/push
#    volumes:
#      - ./observability-tools/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf

 # Applications

  service-discovery:
    container_name: service-discovery
    build: service-discovery/service-discovery-app
    restart: always
    ports:
      - "8081:8081"
    healthcheck:
      test: "curl --fail --silent http://localhost:8081/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  gateway:
    container_name: gateway
    build: gateway/gateway-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_URL=http://service-discovery:8081
      - KEYCLOAK_URL=http://keycloak:8080
    healthcheck:
      test: "curl --fail --silent http://localhost:8080/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  sales-catalog:
    container_name: sales-catalog
    build: sales-catalog/sales-catalog-app
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8081/eureka/
    healthcheck:
      test: "curl --fail --silent http://localhost:8082/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5

  basket-service:
    container_name: basket-service
    build: basket-service/basket-service-app
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      service-discovery:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8081/eureka/
    healthcheck:
      test: "curl --fail --silent http://localhost:8083/private/health | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 5